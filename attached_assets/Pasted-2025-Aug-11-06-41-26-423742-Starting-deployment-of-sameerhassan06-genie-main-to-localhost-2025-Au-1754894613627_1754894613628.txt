2025-Aug-11 06:41:26.423742
Starting deployment of sameerhassan06/genie:main to localhost.
2025-Aug-11 06:41:26.558680
Preparing container with helper image: ghcr.io/coollabsio/coolify-helper:1.0.8.
2025-Aug-11 06:41:26.635434
[CMD]: docker stop --time=30 lksok08wok4gskgcggoo8ks8
2025-Aug-11 06:41:26.635434
Error response from daemon: No such container: lksok08wok4gskgcggoo8ks8
2025-Aug-11 06:41:26.712201
[CMD]: docker rm -f lksok08wok4gskgcggoo8ks8
2025-Aug-11 06:41:26.712201
Error response from daemon: No such container: lksok08wok4gskgcggoo8ks8
2025-Aug-11 06:41:26.820596
[CMD]: docker run -d --network coolify --name lksok08wok4gskgcggoo8ks8 --rm -v /var/run/docker.sock:/var/run/docker.sock ghcr.io/coollabsio/coolify-helper:1.0.8
2025-Aug-11 06:41:26.820596
f88526948d05fc5806553bc130962f129dda2f0669b5fd18f771369bc1d19b58
2025-Aug-11 06:41:28.171005
[CMD]: docker exec lksok08wok4gskgcggoo8ks8 bash -c 'GIT_SSH_COMMAND="ssh -o ConnectTimeout=30 -p 22 -o Port=22 -o LogLevel=ERROR -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null" git ls-remote https://github.com/sameerhassan06/genie main'
2025-Aug-11 06:41:28.171005
61bd442c6766439fe74f80d50cbbd905f1b3c585	refs/heads/main
2025-Aug-11 06:41:28.182826
----------------------------------------
2025-Aug-11 06:41:28.184440
Importing sameerhassan06/genie:main (commit sha HEAD) to /artifacts/lksok08wok4gskgcggoo8ks8.
2025-Aug-11 06:41:28.335185
[CMD]: docker exec lksok08wok4gskgcggoo8ks8 bash -c 'git clone -b "main" https://github.com/sameerhassan06/genie /artifacts/lksok08wok4gskgcggoo8ks8 && cd /artifacts/lksok08wok4gskgcggoo8ks8 && sed -i "s#git@\(.*\):#https://\1/#g" /artifacts/lksok08wok4gskgcggoo8ks8/.gitmodules || true && cd /artifacts/lksok08wok4gskgcggoo8ks8 && GIT_SSH_COMMAND="ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null" git submodule update --init --recursive && cd /artifacts/lksok08wok4gskgcggoo8ks8 && GIT_SSH_COMMAND="ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null" git lfs pull'
2025-Aug-11 06:41:28.335185
Cloning into '/artifacts/lksok08wok4gskgcggoo8ks8'...
2025-Aug-11 06:41:30.210973
sed: /artifacts/lksok08wok4gskgcggoo8ks8/.gitmodules: No such file or directory
2025-Aug-11 06:41:30.552655
[CMD]: docker exec lksok08wok4gskgcggoo8ks8 bash -c 'cd /artifacts/lksok08wok4gskgcggoo8ks8 && git log -1 61bd442c6766439fe74f80d50cbbd905f1b3c585 --pretty=%B'
2025-Aug-11 06:41:30.552655
Update Dockerfile
2025-Aug-11 06:41:30.640506
Image not found (jo0k88cw8g4484c80c0ggkcg:61bd442c6766439fe74f80d50cbbd905f1b3c585). Building new image.
2025-Aug-11 06:41:31.280185
[CMD]: docker exec lksok08wok4gskgcggoo8ks8 bash -c 'cat /artifacts/lksok08wok4gskgcggoo8ks8/Dockerfile'
2025-Aug-11 06:41:31.280185
# Multi-stage build for Node.js application
2025-Aug-11 06:41:31.280185
FROM node:18-alpine AS builder
2025-Aug-11 06:41:31.280185
2025-Aug-11 06:41:31.280185
# Set working directory
2025-Aug-11 06:41:31.280185
WORKDIR /app
2025-Aug-11 06:41:31.280185
2025-Aug-11 06:41:31.280185
# Copy package files
2025-Aug-11 06:41:31.280185
COPY package*.json ./
2025-Aug-11 06:41:31.280185
2025-Aug-11 06:41:31.280185
# Install ALL dependencies (including dev dependencies for build)
2025-Aug-11 06:41:31.280185
RUN npm ci
2025-Aug-11 06:41:31.280185
2025-Aug-11 06:41:31.280185
# Copy source code
2025-Aug-11 06:41:31.280185
COPY . .
2025-Aug-11 06:41:31.280185
2025-Aug-11 06:41:31.280185
# Build the application
2025-Aug-11 06:41:31.280185
RUN npm run build
2025-Aug-11 06:41:31.280185
2025-Aug-11 06:41:31.280185
# Production stage
2025-Aug-11 06:41:31.280185
FROM node:18-alpine AS production
2025-Aug-11 06:41:31.280185
2025-Aug-11 06:41:31.280185
# Install dumb-init for proper signal handling
2025-Aug-11 06:41:31.280185
RUN apk add --no-cache dumb-init
2025-Aug-11 06:41:31.280185
2025-Aug-11 06:41:31.280185
# Set working directory
2025-Aug-11 06:41:31.280185
WORKDIR /app
2025-Aug-11 06:41:31.280185
2025-Aug-11 06:41:31.280185
# Copy package files and install only production dependencies
2025-Aug-11 06:41:31.280185
COPY package*.json ./
2025-Aug-11 06:41:31.280185
RUN npm ci --only=production && npm cache clean --force
2025-Aug-11 06:41:31.280185
2025-Aug-11 06:41:31.280185
# Copy built application from builder stage
2025-Aug-11 06:41:31.280185
COPY --from=builder /app/dist ./dist
2025-Aug-11 06:41:31.280185
2025-Aug-11 06:41:31.280185
# Copy static files directly to expected location
2025-Aug-11 06:41:31.280185
COPY --from=builder /app/dist/public ./public
2025-Aug-11 06:41:31.280185
2025-Aug-11 06:41:31.280185
# Expose port
2025-Aug-11 06:41:31.280185
EXPOSE 5000
2025-Aug-11 06:41:31.280185
2025-Aug-11 06:41:31.280185
# Set environment
2025-Aug-11 06:41:31.280185
ENV NODE_ENV=production
2025-Aug-11 06:41:31.280185
ENV PORT=5000
2025-Aug-11 06:41:31.280185
2025-Aug-11 06:41:31.280185
# Start the application
2025-Aug-11 06:41:31.280185
CMD ["dumb-init", "node", "dist/index.js"]
2025-Aug-11 06:41:31.538425
[CMD]: docker exec lksok08wok4gskgcggoo8ks8 bash -c 'cat /artifacts/lksok08wok4gskgcggoo8ks8/Dockerfile'
2025-Aug-11 06:41:31.538425
# Multi-stage build for Node.js application
2025-Aug-11 06:41:31.538425
FROM node:18-alpine AS builder
2025-Aug-11 06:41:31.538425
2025-Aug-11 06:41:31.538425
# Set working directory
2025-Aug-11 06:41:31.538425
WORKDIR /app
2025-Aug-11 06:41:31.538425
2025-Aug-11 06:41:31.538425
# Copy package files
2025-Aug-11 06:41:31.538425
COPY package*.json ./
2025-Aug-11 06:41:31.538425
2025-Aug-11 06:41:31.538425
# Install ALL dependencies (including dev dependencies for build)
2025-Aug-11 06:41:31.538425
RUN npm ci
2025-Aug-11 06:41:31.538425
2025-Aug-11 06:41:31.538425
# Copy source code
2025-Aug-11 06:41:31.538425
COPY . .
2025-Aug-11 06:41:31.538425
2025-Aug-11 06:41:31.538425
# Build the application
2025-Aug-11 06:41:31.538425
RUN npm run build
2025-Aug-11 06:41:31.538425
2025-Aug-11 06:41:31.538425
# Production stage
2025-Aug-11 06:41:31.538425
FROM node:18-alpine AS production
2025-Aug-11 06:41:31.538425
2025-Aug-11 06:41:31.538425
# Install dumb-init for proper signal handling
2025-Aug-11 06:41:31.538425
RUN apk add --no-cache dumb-init
2025-Aug-11 06:41:31.538425
2025-Aug-11 06:41:31.538425
# Set working directory
2025-Aug-11 06:41:31.538425
WORKDIR /app
2025-Aug-11 06:41:31.538425
2025-Aug-11 06:41:31.538425
# Copy package files and install only production dependencies
2025-Aug-11 06:41:31.538425
COPY package*.json ./
2025-Aug-11 06:41:31.538425
RUN npm ci --only=production && npm cache clean --force
2025-Aug-11 06:41:31.538425
2025-Aug-11 06:41:31.538425
# Copy built application from builder stage
2025-Aug-11 06:41:31.538425
COPY --from=builder /app/dist ./dist
2025-Aug-11 06:41:31.538425
2025-Aug-11 06:41:31.538425
# Copy static files directly to expected location
2025-Aug-11 06:41:31.538425
COPY --from=builder /app/dist/public ./public
2025-Aug-11 06:41:31.538425
2025-Aug-11 06:41:31.538425
# Expose port
2025-Aug-11 06:41:31.538425
EXPOSE 5000
2025-Aug-11 06:41:31.538425
2025-Aug-11 06:41:31.538425
# Set environment
2025-Aug-11 06:41:31.538425
ENV NODE_ENV=production
2025-Aug-11 06:41:31.538425
ENV PORT=5000
2025-Aug-11 06:41:31.538425
2025-Aug-11 06:41:31.538425
# Start the application
2025-Aug-11 06:41:31.538425
CMD ["dumb-init", "node", "dist/index.js"]
2025-Aug-11 06:41:31.668538
----------------------------------------
2025-Aug-11 06:41:31.671058
Building docker image started.
2025-Aug-11 06:41:31.672784
To check the current progress, click on Show Debug Logs.
2025-Aug-11 06:41:31.910930
[CMD]: docker exec lksok08wok4gskgcggoo8ks8 bash -c 'cat /artifacts/build.sh'
2025-Aug-11 06:41:31.910930
docker build  --add-host coolify:10.0.1.5 --add-host coolify-db:10.0.1.2 --add-host coolify-realtime:10.0.1.4 --add-host coolify-redis:10.0.1.3 --network host -f /artifacts/lksok08wok4gskgcggoo8ks8/Dockerfile --build-arg SOURCE_COMMIT='61bd442c6766439fe74f80d50cbbd905f1b3c585' --build-arg 'COOLIFY_URL=http://jo0k88cw8g4484c80c0ggkcg.195.35.20.130.sslip.io' --build-arg 'COOLIFY_FQDN=jo0k88cw8g4484c80c0ggkcg.195.35.20.130.sslip.io' --build-arg 'COOLIFY_BRANCH=main' --build-arg 'COOLIFY_RESOURCE_UUID=jo0k88cw8g4484c80c0ggkcg' --build-arg 'COOLIFY_CONTAINER_NAME=jo0k88cw8g4484c80c0ggkcg-064125668051' --progress plain -t jo0k88cw8g4484c80c0ggkcg:61bd442c6766439fe74f80d50cbbd905f1b3c585 /artifacts/lksok08wok4gskgcggoo8ks8
2025-Aug-11 06:41:32.309028
[CMD]: docker exec lksok08wok4gskgcggoo8ks8 bash -c 'bash /artifacts/build.sh'
2025-Aug-11 06:41:32.309028
#0 building with "default" instance using docker driver
2025-Aug-11 06:41:32.309028
2025-Aug-11 06:41:32.309028
#1 [internal] load build definition from Dockerfile
2025-Aug-11 06:41:32.309028
#1 transferring dockerfile: 990B done
2025-Aug-11 06:41:32.309028
#1 DONE 0.0s
2025-Aug-11 06:41:32.309028
2025-Aug-11 06:41:32.309028
#2 [internal] load metadata for docker.io/library/node:18-alpine
2025-Aug-11 06:41:33.543231
#2 DONE 1.4s
2025-Aug-11 06:41:33.656397
#3 [internal] load .dockerignore
2025-Aug-11 06:41:33.656397
#3 transferring context: 282B done
2025-Aug-11 06:41:33.656397
#3 DONE 0.0s
2025-Aug-11 06:41:33.656397
2025-Aug-11 06:41:33.656397
#4 [builder 1/6] FROM docker.io/library/node:18-alpine@sha256:8d6421d663b4c28fd3ebc498332f249011d118945588d0a35cb9bc4b8ca09d9e
2025-Aug-11 06:41:33.656397
#4 DONE 0.0s
2025-Aug-11 06:41:33.656397
2025-Aug-11 06:41:33.656397
#5 [production 2/7] RUN apk add --no-cache dumb-init
2025-Aug-11 06:41:33.656397
#5 CACHED
2025-Aug-11 06:41:33.656397
2025-Aug-11 06:41:33.656397
#6 [production 3/7] WORKDIR /app
2025-Aug-11 06:41:33.656397
#6 DONE 0.0s
2025-Aug-11 06:41:33.656397
2025-Aug-11 06:41:33.656397
#7 [internal] load build context
2025-Aug-11 06:41:33.656397
#7 transferring context: 4.55MB 0.0s done
2025-Aug-11 06:41:33.656397
#7 DONE 0.1s
2025-Aug-11 06:41:33.656397
2025-Aug-11 06:41:33.656397
#8 [builder 3/6] COPY package*.json ./
2025-Aug-11 06:41:33.656397
#8 CACHED
2025-Aug-11 06:41:33.656397
2025-Aug-11 06:41:33.656397
#9 [builder 2/6] WORKDIR /app
2025-Aug-11 06:41:33.656397
#9 CACHED
2025-Aug-11 06:41:33.656397
2025-Aug-11 06:41:33.656397
#10 [builder 4/6] RUN npm ci
2025-Aug-11 06:41:33.656397
#10 CACHED
2025-Aug-11 06:41:33.656397
2025-Aug-11 06:41:33.656397
#11 [production 4/7] COPY package*.json ./
2025-Aug-11 06:41:33.656397
#11 DONE 0.0s
2025-Aug-11 06:41:33.656397
2025-Aug-11 06:41:33.656397
#12 [builder 5/6] COPY . .
2025-Aug-11 06:41:33.656397
#12 DONE 0.0s
2025-Aug-11 06:41:33.656397
2025-Aug-11 06:41:33.656397
#13 [production 5/7] RUN npm ci --only=production && npm cache clean --force
2025-Aug-11 06:41:33.807362
#13 0.165 npm warn config only Use `--omit=dev` to omit dev dependencies from the install.
2025-Aug-11 06:41:40.775783
#13 ...
2025-Aug-11 06:41:40.775783
2025-Aug-11 06:41:40.775783
#14 [builder 6/6] RUN npm run build
2025-Aug-11 06:41:40.775783
#14 0.185
2025-Aug-11 06:41:40.775783
#14 0.185 > rest-express@1.0.0 build
2025-Aug-11 06:41:40.775783
#14 0.185 > vite build && esbuild server/index.ts --platform=node --packages=external --bundle --format=esm --outdir=dist
2025-Aug-11 06:41:40.775783
#14 0.185
2025-Aug-11 06:41:40.775783
#14 0.503 vite v5.4.19 building for production...
2025-Aug-11 06:41:40.775783
#14 0.552 transforming...
2025-Aug-11 06:41:40.775783
#14 1.117 Browserslist: browsers data (caniuse-lite) is 10 months old. Please run:
2025-Aug-11 06:41:40.775783
#14 1.117   npx update-browserslist-db@latest
2025-Aug-11 06:41:40.775783
#14 1.117   Why you should do it regularly: https://github.com/browserslist/update-db#readme
2025-Aug-11 06:41:40.925336
#14 7.267 ✓ 1754 modules transformed.
2025-Aug-11 06:41:41.438605
#14 7.779 rendering chunks...
2025-Aug-11 06:41:41.688410
#14 7.799 computing gzip size...
2025-Aug-11 06:41:41.688410
#14 7.822 ../dist/public/index.html                   0.63 kB │ gzip:   0.38 kB
2025-Aug-11 06:41:41.688410
#14 7.823 ../dist/public/assets/index-BJSqTi55.css   72.29 kB │ gzip:  12.50 kB
2025-Aug-11 06:41:41.688410
#14 7.823 ../dist/public/assets/index-DgO1Pibm.js   564.93 kB │ gzip: 151.13 kB
2025-Aug-11 06:41:41.688410
#14 7.823
2025-Aug-11 06:41:41.688410
#14 7.823 (!) Some chunks are larger than 500 kB after minification. Consider:
2025-Aug-11 06:41:41.688410
#14 7.823 - Using dynamic import() to code-split the application
2025-Aug-11 06:41:41.688410
#14 7.823 - Use build.rollupOptions.output.manualChunks to improve chunking: https://rollupjs.org/configuration-options/#output-manualchunks
2025-Aug-11 06:41:41.688410
#14 7.823 - Adjust chunk size limit for this warning via build.chunkSizeWarningLimit.
2025-Aug-11 06:41:41.688410
#14 7.823 ✓ built in 7.29s
2025-Aug-11 06:41:41.688410
#14 7.879
2025-Aug-11 06:41:41.688410
#14 7.879   dist/index.js  62.8kb
2025-Aug-11 06:41:41.688410
#14 7.879
2025-Aug-11 06:41:41.688410
#14 7.879 ⚡ Done in 12ms
2025-Aug-11 06:41:41.753231
#14 DONE 8.1s
2025-Aug-11 06:41:41.758096
#13 [production 5/7] RUN npm ci --only=production && npm cache clean --force
2025-Aug-11 06:41:59.961045
#13 26.32
2025-Aug-11 06:41:59.961045
#13 26.32 added 480 packages, and audited 481 packages in 26s
2025-Aug-11 06:42:00.121103
#13 26.32
2025-Aug-11 06:42:00.121103
#13 26.32 60 packages are looking for funding
2025-Aug-11 06:42:00.121103
#13 26.32   run `npm fund` for details
2025-Aug-11 06:42:00.121103
#13 26.32
2025-Aug-11 06:42:00.121103
#13 26.32 3 low severity vulnerabilities
2025-Aug-11 06:42:00.121103
#13 26.32
2025-Aug-11 06:42:00.121103
#13 26.32 To address all issues, run:
2025-Aug-11 06:42:00.121103
#13 26.32   npm audit fix
2025-Aug-11 06:42:00.121103
#13 26.32
2025-Aug-11 06:42:00.121103
#13 26.32 Run `npm audit` for details.
2025-Aug-11 06:42:00.121103
#13 26.32 npm notice
2025-Aug-11 06:42:00.121103
#13 26.32 npm notice New major version of npm available! 10.8.2 -> 11.5.2
2025-Aug-11 06:42:00.121103
#13 26.32 npm notice Changelog: https://github.com/npm/cli/releases/tag/v11.5.2
2025-Aug-11 06:42:00.121103
#13 26.32 npm notice To update run: npm install -g npm@11.5.2
2025-Aug-11 06:42:00.121103
#13 26.32 npm notice
2025-Aug-11 06:42:00.152071
#13 26.51 npm warn using --force Recommended protections disabled.
2025-Aug-11 06:42:00.820978
#13 DONE 27.2s
2025-Aug-11 06:42:01.012697
#15 [production 6/7] COPY --from=builder /app/dist ./dist
2025-Aug-11 06:42:01.012697
#15 DONE 0.0s
2025-Aug-11 06:42:01.012697
2025-Aug-11 06:42:01.012697
#16 [production 7/7] COPY --from=builder /app/dist/public ./public
2025-Aug-11 06:42:01.012697
#16 DONE 0.0s
2025-Aug-11 06:42:01.012697
2025-Aug-11 06:42:01.012697
#17 exporting to image
2025-Aug-11 06:42:01.012697
#17 exporting layers
2025-Aug-11 06:42:03.527477
#17 exporting layers 2.7s done
2025-Aug-11 06:42:03.546068
#17 writing image sha256:a71070003114835a847dbe37177b3a3fbf84c594c551f280d58a8a6d72247730 done
2025-Aug-11 06:42:03.546068
#17 naming to docker.io/library/jo0k88cw8g4484c80c0ggkcg:61bd442c6766439fe74f80d50cbbd905f1b3c585 done
2025-Aug-11 06:42:03.546068
#17 DONE 2.7s
2025-Aug-11 06:42:03.558451
Building docker image completed.
2025-Aug-11 06:42:03.561403
----------------------------------------
2025-Aug-11 06:42:03.563838
Rolling update started.
2025-Aug-11 06:42:03.729547
[CMD]: docker exec lksok08wok4gskgcggoo8ks8 bash -c 'SOURCE_COMMIT=61bd442c6766439fe74f80d50cbbd905f1b3c585 COOLIFY_URL=http://jo0k88cw8g4484c80c0ggkcg.195.35.20.130.sslip.io COOLIFY_FQDN=jo0k88cw8g4484c80c0ggkcg.195.35.20.130.sslip.io COOLIFY_BRANCH=main  docker compose --project-name jo0k88cw8g4484c80c0ggkcg --project-directory /artifacts/lksok08wok4gskgcggoo8ks8 -f /artifacts/lksok08wok4gskgcggoo8ks8/docker-compose.yaml up --build -d'
2025-Aug-11 06:42:03.729547
time="2025-08-11T06:42:03Z" level=warning msg="Found orphan containers ([jo0k88cw8g4484c80c0ggkcg-063700629991]) for this project. If you removed or renamed this service in your compose file, you can run this command with the --remove-orphans flag to clean it up."
2025-Aug-11 06:42:03.729547
Container jo0k88cw8g4484c80c0ggkcg-064125668051  Creating
2025-Aug-11 06:42:03.774633
jo0k88cw8g4484c80c0ggkcg-064125668051 Your kernel does not support memory swappiness capabilities or the cgroup is not mounted. Memory swappiness discarded.
2025-Aug-11 06:42:03.776817
Container jo0k88cw8g4484c80c0ggkcg-064125668051  Created
2025-Aug-11 06:42:03.776817
Container jo0k88cw8g4484c80c0ggkcg-064125668051  Starting
2025-Aug-11 06:42:03.979421
Container jo0k88cw8g4484c80c0ggkcg-064125668051  Started
2025-Aug-11 06:42:03.988061
New container started.
2025-Aug-11 06:42:03.991751
Removing old containers.
2025-Aug-11 06:42:04.256061
[CMD]: docker stop --time=30 jo0k88cw8g4484c80c0ggkcg-063700629991
2025-Aug-11 06:42:04.256061
jo0k88cw8g4484c80c0ggkcg-063700629991
2025-Aug-11 06:42:04.351897
[CMD]: docker rm -f jo0k88cw8g4484c80c0ggkcg-063700629991
2025-Aug-11 06:42:04.351897
jo0k88cw8g4484c80c0ggkcg-063700629991
2025-Aug-11 06:42:04.354312
Rolling update completed.
2025-Aug-11 06:42:04.661461
Gracefully shutting down build container: lksok08wok4gskgcggoo8ks8
2025-Aug-11 06:42:04.901627
[CMD]: docker stop --time=30 lksok08wok4gskgcggoo8ks8
2025-Aug-11 06:42:04.901627
lksok08wok4gskgcggoo8ks8
2025-Aug-11 06:42:05.031520
[CMD]: docker rm -f lksok08wok4gskgcggoo8ks8
2025-Aug-11 06:42:05.031520
Error response from daemon: No such container: lksok08wok4gskgcggoo8ks8